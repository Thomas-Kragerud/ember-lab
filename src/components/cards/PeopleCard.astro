---
// PeopleCard.astro

const { person } = Astro.props;
const { name, title, image, email, url, research, social } = person.data;
const defaultImage = "/images/team/default-avatar.png";
const BASE_URL = import.meta.env.BASE_URL;
---

<div class="people-card group theme-transition">
  <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden flex flex-col h-full transform transition-transform duration-200 hover:translate-y-[-1px]">
    <div class="relative pb-3/4 overflow-hidden">
      {image ? (
        <img 
          src={image} 
          alt={`Photo of ${name}`} 
          class="absolute inset-0 w-full h-full object-cover object-center group-hover:scale-102 transition-transform duration-300"
        />
      ) : (
        <img 
          src={defaultImage} 
          alt={`Default avatar for ${name}`} 
          class="absolute inset-0 w-full h-full object-cover object-center"
        />
      )}
    </div>
    
    <div class="p-4 flex-grow flex flex-col">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1">{name}</h3>
      <p class="text-sm text-emberGray-500 dark:text-emberGray-300 mb-2">{title}</p>
      
      {research && (
        <p class="text-xs text-gray-600 dark:text-gray-400 mb-3 italic">{research}</p>
      )}
      
      <div class="mt-auto flex flex-col gap-2 text-xs">
        {email && (
          <div class="flex items-center">
            <a href={`mailto:${email}`} class="w-5 flex justify-center text-gray-700 dark:text-gray-300 hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
            </a>
            <span class="text-[10px] text-gray-600 dark:text-gray-400 ml-1 truncate">{email}</span>
          </div>
        )}

        <!-- Social links row -->
        <div class="flex gap-1 pl-0">
          <!-- We'll create an array of social links and only render the ones that exist -->
          {(() => {
            const socialLinks = [];
            
            if (url) {
              socialLinks.push({
                href: url,
                icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                </svg>`,
                label: "Website"
              });
            }
            
            if (social && social.google_scholar) {
              socialLinks.push({
                href: social.google_scholar,
                icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M5.242 13.769L0 9.5 12 0l12 9.5-5.242 4.269C17.548 11.249 14.978 9.5 12 9.5c-2.977 0-5.548 1.748-6.758 4.269zM12 10a7 7 0 1 0 0 14 7 7 0 0 0 0-14z"/>
                </svg>`,
                label: "Google Scholar"
              });
            }
            
            if (social && social.github) {
              socialLinks.push({
                href: social.github,
                icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>`,
                label: "GitHub"
              });
            }
            
            return socialLinks.length > 0 ? (
              <Fragment>
                <div class="w-5 flex justify-center">
                  <a href={socialLinks[0].href} target="_blank" rel="noopener noreferrer" class="text-gray-700 dark:text-gray-300 hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors" set:html={socialLinks[0].icon}>
                  </a>
                </div>
                
                {socialLinks.slice(1).map(link => (
                  <div class="flex justify-center">
                    <a href={link.href} target="_blank" rel="noopener noreferrer" class="text-gray-700 dark:text-gray-300 hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors" set:html={link.icon}>
                    </a>
                  </div>
                ))}
              </Fragment>
            ) : null;
          })()}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .pb-3\/4 {
    padding-bottom: 75%; /* 3:4 aspect ratio */
  }
</style>