---
import Navbar from '@components/layout/Navbar.astro';
import Footer from '@components/layout/Footer.astro';
import "../styles/global.css";
import { ClientRouter } from 'astro:transitions';

const { title } = Astro.props;
const BASE_URL = import.meta.env.BASE_URL;
---

<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title ? `${title} – EMBER Lab` : 'EMBER Lab'}</title>
    <link rel="icon" type="image/webp" href={BASE_URL + "/images/ember_icon.webp"}/>

    <!-- 1️⃣ Critical in‑head CSS to guarantee a dark background is present *before* paint -->
    <style is:inline>
      :root {
        /* default light */
        color-scheme: light;
        --initial-bg: #ffffff;
      }
      html.dark {
        /* default dark */
        color-scheme: dark;
        --initial-bg: #111827; /* Tailwind gray‑900 */
      }
      html,body { background: var(--initial-bg); }
      /* disable all transitions until we re‑enable (prevents flicker) */
      .disable-transitions * { transition: none !important; }
    </style>

    <!-- fonts, preconnects etc. -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />

    <!-- enable SPA view‑transitions -->
    <ClientRouter fallback="swap" />

    <!-- 2️⃣ Theme script: runs *immediately* and also during every SPA navigation -->
    <script is:inline>
      (() => {
        /* util to pick current theme */
        const getTheme = () => {
          const stored = localStorage.getItem('theme');
          if (stored === 'dark' || stored === 'light') return stored;
          return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        };

        /* apply theme to a given document (current or incoming) */
        const applyTheme = (doc) => {
          const theme = getTheme();
          doc.documentElement.classList.toggle('dark', theme === 'dark');
          doc.documentElement.setAttribute('data-theme', theme);
        };

        /* —— first paint —— */
        applyTheme(document);
        document.documentElement.classList.add('disable-transitions');
        addEventListener('DOMContentLoaded', () => {
          // re‑enable transitions after first layout
          document.documentElement.classList.remove('disable-transitions');
        });

        /* —— SPA navigations —— */
        document.addEventListener('astro:before-swap', (e) => {
          // e.newDocument is the *incoming* page; tag it before it renders
          applyTheme(e.newDocument);
        });

        /* expose toggle for the UI button */
        window.toggleTheme = () => {
          const next = document.documentElement.classList.contains('dark') ? 'light' : 'dark';
          localStorage.setItem('theme', next);
          applyTheme(document);
        };

        /* watch system changes only when user hasn’t chosen explicitly */
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (mq) => {
          if (!localStorage.getItem('theme')) {
            applyTheme(document);
          }
        });
      })();
    </script>
  </head>

  <body class="bg-white dark:bg-gray-900 text-gray-800 dark:text-gray-100 font-['Inter',sans-serif] min-h-screen flex flex-col">
    <!-- background gradient layer (stays dark) -->
    <div class="fixed inset-0 -z-10 pointer-events-none bg-gradient-to-br from-emberGreen-50/20 via-emberBlue-50/10 to-transparent dark:from-emberGreen-900/10 dark:via-emberBlue-900/5"></div>

    <Navbar />

    <main class="flex-grow pt-16 w-full max-w-7xl mx-auto px-6 sm:px-10 lg:px-16">
      <slot />
    </main>

    <Footer />
  </body>
</html>
